
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package net.ddns.lai.boardbooking;

import java.util.logging.Logger;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

/**
 * This class was generated by Apache CXF 3.1.6
 * 2016-08-29T01:17:46.651+02:00
 * Generated source version: 3.1.6
 * 
 */

@javax.jws.WebService(
                      serviceName = "BoardBooking",
                      portName = "BoardBooking",
                      targetNamespace = "http://www.lai.ddns.net/BoardBooking/",
                      wsdlLocation = "file:/home/giovanni/workspace/LAIBoardgame/BoardBookingWS/WebContent/WEB-INF/wsdl/BoardBooking.wsdl",
                      endpointInterface = "net.ddns.lai.boardbooking.BoardBooking")
                      
public class BoardBookingImpl implements BoardBooking {

    private static final Logger LOG = Logger.getLogger(BoardBookingImpl.class.getName());

    /* (non-Javadoc)
     * @see net.ddns.lai.boardbooking.BoardBooking#abortBoardgameBooking(java.lang.String  bookingAbort )*
     */
    public net.ddns.lai.schema.boardbooking.SuccessOrFailure abortBoardgameBooking(java.lang.String bookingAbort) { 
        LOG.info("Executing operation abortBoardgameBooking");
        System.out.println(bookingAbort);
        try {
            net.ddns.lai.schema.boardbooking.SuccessOrFailure _return = net.ddns.lai.schema.boardbooking.SuccessOrFailure.SUCCESS;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see net.ddns.lai.boardbooking.BoardBooking#bookingDetails(java.lang.String  requestDetails )*
     */
    public net.ddns.lai.schema.boardbooking.BookingDetailsListType bookingDetails(java.lang.String requestDetails) { 
        LOG.info("Executing operation bookingDetails");
        System.out.println(requestDetails);
        try {
            net.ddns.lai.schema.boardbooking.BookingDetailsListType _return = new net.ddns.lai.schema.boardbooking.BookingDetailsListType();
            java.util.List<net.ddns.lai.schema.boardbooking.BookingDetailsType> _returnItem = new java.util.ArrayList<net.ddns.lai.schema.boardbooking.BookingDetailsType>();
            net.ddns.lai.schema.boardbooking.BookingDetailsType _returnItemVal1 = new net.ddns.lai.schema.boardbooking.BookingDetailsType();
            _returnItemVal1.setBookingID("BookingID1785527578");
            _returnItemVal1.setGame("Game-1403283144");
            java.time.LocalDate _returnItemVal1BaseDate = null;
            _returnItemVal1.setBaseDate(_returnItemVal1BaseDate);
            java.time.LocalDate _returnItemVal1EndDate = null;
            _returnItemVal1.setEndDate(_returnItemVal1EndDate);
            _returnItem.add(_returnItemVal1);
            _return.getItem().addAll(_returnItem);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see net.ddns.lai.boardbooking.BoardBooking#requestPaymentData(net.ddns.lai.schema.boardbooking.EmptyType  payment )*
     */
    public net.ddns.lai.schema.boardbooking.RequestPaymentDataAnswerType requestPaymentData(net.ddns.lai.schema.boardbooking.EmptyType payment) { 
        LOG.info("Executing operation requestPaymentData");
        System.out.println(payment);
        try {
            net.ddns.lai.schema.boardbooking.RequestPaymentDataAnswerType _return = new net.ddns.lai.schema.boardbooking.RequestPaymentDataAnswerType();
            net.ddns.lai.schema.boardbooking.RequestPaymentDataAnswerType.Failure _returnFailure = new net.ddns.lai.schema.boardbooking.RequestPaymentDataAnswerType.Failure();
            _return.setFailure(_returnFailure);
            net.ddns.lai.schema.boardbooking.RequestPaymentDataAnswerType.Success _returnSuccess = new net.ddns.lai.schema.boardbooking.RequestPaymentDataAnswerType.Success();
            _returnSuccess.setPrice(125253840);
            _returnSuccess.setBookingID("BookingID1463298085");
            _return.setSuccess(_returnSuccess);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see net.ddns.lai.boardbooking.BoardBooking#openSession(net.ddns.lai.schema.boardbooking.OpenSessionType  openSession )*
     */
    public net.ddns.lai.schema.boardbooking.SuccessOrFailure openSession(net.ddns.lai.schema.boardbooking.OpenSessionType openSession) { 
        LOG.info("Executing operation openSession");
        System.out.println(openSession);
        try {
            net.ddns.lai.schema.boardbooking.SuccessOrFailure _return = net.ddns.lai.schema.boardbooking.SuccessOrFailure.FAILURE;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see net.ddns.lai.boardbooking.BoardBooking#listGames(net.ddns.lai.schema.boardbooking.EmptyType  listGames )*
     */
    public net.ddns.lai.schema.boardbooking.GameListType listGames(net.ddns.lai.schema.boardbooking.EmptyType listGames) { 
        LOG.info("Executing operation listGames");
        System.out.println(listGames);
        try {
            net.ddns.lai.schema.boardbooking.GameListType _return = new net.ddns.lai.schema.boardbooking.GameListType();
            java.util.List<net.ddns.lai.schema.boardbooking.BoardgameInfoType> _returnGame = new java.util.ArrayList<net.ddns.lai.schema.boardbooking.BoardgameInfoType>();
            net.ddns.lai.schema.boardbooking.BoardgameInfoType _returnGameVal1 = new net.ddns.lai.schema.boardbooking.BoardgameInfoType();
            _returnGameVal1.setName("Name-1742774531");
            _returnGameVal1.setPrice(1322362370);
            _returnGame.add(_returnGameVal1);
            _return.getGame().addAll(_returnGame);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see net.ddns.lai.boardbooking.BoardBooking#bookingGroups(net.ddns.lai.schema.boardbooking.EmptyType  requestBookingGroups )*
     */
    public net.ddns.lai.schema.boardbooking.BookingGroupListType bookingGroups(net.ddns.lai.schema.boardbooking.EmptyType requestBookingGroups) { 
        LOG.info("Executing operation bookingGroups");
        System.out.println(requestBookingGroups);
        try {
            net.ddns.lai.schema.boardbooking.BookingGroupListType _return = new net.ddns.lai.schema.boardbooking.BookingGroupListType();
            java.util.List<net.ddns.lai.schema.boardbooking.BookingGroupType> _returnItem = new java.util.ArrayList<net.ddns.lai.schema.boardbooking.BookingGroupType>();
            net.ddns.lai.schema.boardbooking.BookingGroupType _returnItemVal1 = new net.ddns.lai.schema.boardbooking.BookingGroupType();
            _returnItemVal1.setBookingID("BookingID278044066");
            _returnItemVal1.setPaid(false);
            _returnItem.add(_returnItemVal1);
            _return.getItem().addAll(_returnItem);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see net.ddns.lai.boardbooking.BoardBooking#bookBoardgame(net.ddns.lai.schema.boardbooking.BookingDataType  bookingData )*
     */
    public net.ddns.lai.schema.boardbooking.BoardgameBookingAnswerType bookBoardgame(net.ddns.lai.schema.boardbooking.BookingDataType bookingData) { 
        LOG.info("Executing operation bookBoardgame");
        System.out.println(bookingData);
        try {
            net.ddns.lai.schema.boardbooking.BoardgameBookingAnswerType _return = new net.ddns.lai.schema.boardbooking.BoardgameBookingAnswerType();
            net.ddns.lai.schema.boardbooking.BoardgameBookingAnswerType.Failure _returnFailure = new net.ddns.lai.schema.boardbooking.BoardgameBookingAnswerType.Failure();
            _return.setFailure(_returnFailure);
            _return.setSuccess("Success-2010580749");
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

}
